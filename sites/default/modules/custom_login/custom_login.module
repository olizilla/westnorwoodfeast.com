<?php

//custom blocks
//http://api.drupal.org/api/function/block_example_block/6
function custom_login_block($op = 'list', $delta = 0, $edit = array()) {
	// The $op parameter determines what piece of information is being requested.
	switch ($op) {
		case 'list':
			// If $op is "list", we just need to return a list of block descriptions.
			// This is used to provide a list of possible blocks to the administrator,
			// end users will not see these descriptions.
			$blocks[0] = array(
				'info' => t('Custom User Links'),
			);
			return $blocks;
		case 'configure':
			//any config options
			return;
		case 'save':
			//save the config options
			return;
		case 'view': default:
			// If $op is "view", then we need to generate the block for display
			// purposes. The $delta parameter tells us which block is being requested.
			switch ($delta) {
				case 0:
					// The subject is displayed at the top of the block. Note that it
					// should be passed through t() for translation.
					//$block['subject'] = t('User Login');
					// The content of the block is typically generated by calling a custom
					// function.
					$block['content'] = _custom_login_block();
					break;
			}
			return $block;
	}
}

function _custom_login_block() {
	//this is the custom login block
	global $user;
	$is_admin = false;
	$is_content_editor = false;
	$is_hub_champion = false;
	$is_blogger = false;
	foreach ($user->roles as $role) {
		if ($role == 'content editor') $is_content_editor = true;
		if ($role == 'hub champion') $is_hub_champion = true;
		if ($role == 'administrator') $is_admin = true;
		if ($role == 'blogger') $is_blogger = true;
	}
	$contents = '<div id="custom-user-block">';
	$this_page = drupal_get_destination();
	//$contents .= "hello!";
	if (user_is_anonymous()) {
		//logged out users
		$contents .= '<ul>';
		$contents .= '<li>'.t('Hello Stranger!').'</li>';
		$contents .= '<li>'.t(l('Log in', 'user', array('query' => $this_page))).'</li>';
		$contents .= '<li>'.t(l('or Register', 'user/register')).'</li>';
		//$contents .= '<li>'.t('<a href="/user/password?'.$this_page.'">Forgot Password</a>').'</li>';
		if (function_exists('fbconnect_render_button')) {
			//$contents .= '<li>'.fbconnect_render_button(array('size' => 'small')).'</li>';
		}
		$contents .= '</ul>';
	} else {
		//user is logged in
		$contents .= '<ul>';
		//$contents .= '<li>'.t('Logged in as').'</li>';
		$contents .= '<li>'.t('Hello'.theme('username',  $user)).'</li>';
		//checks profile completeness
		if (function_exists('pcp_get_complete_percentage_data')) {
			$complete_data = pcp_get_complete_percentage_data($user);
			if ($complete_data['percent'] != 100) {
				$message = l('Fill in Profile', 'user/'.$user->uid.'/edit/Personal Information');
				$contents .= '<li>'.$message.'</li>';
			}
		}
		if (function_exists('content_profile_load')) {
			if (!does_user_have_profile($user->uid)) {
				$contents .= '<li>'.t(l('Create Your Profile', 'node/add/profile')).'</li>';
			} else {
				$user_profile = content_profile_load('profile', $user->uid);
				if ($user_profile->body == '') {
					$contents .= '<li>'.t(l('Complete Your Profile', 'node/add/profile')).'</li>';
				}
			}
		}
		if ($is_admin) {
			$contents .= '<li>'.t(l('Admin Pages', 'admin')).'</li>';
			$contents .= '<li>'.t(l('Mass Contact', 'mass_contact')).'</li>';
		}
		if ($is_blogger || $is_content_editor || $is_admin) {
			$contents .= '<li>'.t(l('Write Content', 'node/add')).'</li>';
		}
			
		$contents .= '<li>'.t(l('Log Out', 'logout')).'</li>';
		$contents .= '</ul>';
	}
	$contents .= '</div>';
	return $contents;
}

function does_user_have_profile($uid)  {
	$user_profile = content_profile_load('profile', $uid);
	if (isset($user_profile->title) || $user_profile->title != '') {
		return true;
	} else {
		return false;
	}
}
